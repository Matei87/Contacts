{"version":3,"sources":["context/ContactContext.js","context/ContactReducer.js","context/types.js","context/ContactState.js","components/Navbar/Navbar.js","components/AddContact/AddContact.js","components/FindContact/FindContact.js","components/Contact/Contact.js","components/Contacts/Contacts.js","components/Footer/Footer.js","App.js","index.js"],"names":["ContactContext","createContext","ContactReducer","state","action","type","contacts","payload","filter","contact","id","map","current","filtered","regex","RegExp","name","match","ContactState","props","initialState","JSON","parse","localStorage","getItem","useReducer","dispatch","Provider","value","addContact","deleteContact","setCurrentContact","updateContact","clearCurrentContact","filterContacts","text","clearFilter","children","Navbar","className","AddContact","contactContext","useContext","useState","email","phone","setContact","useEffect","onChangeActions","e","uuid","target","setItem","stringify","onSubmit","preventDefault","placeholder","onChange","required","checked","htmlFor","FindContact","useRef","ref","Contact","onClick","bind","Contacts","length","key","style","margin","fontSize","Footer","Date","getFullYear","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d51233f.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\n//Create context\r\nexport const ContactContext = createContext();","import {\r\n    ADD_CONTACT, UPDATE_CONTACT, DELETE_CONTACT, CLEAR_CURRENT,\r\n    FILTER_CONTACTS, SET_CURRENT, CLEAR_FILTER\r\n} from './types';\r\n\r\n//Create the Reducer or the Actions or the ContactReducer\r\nexport const ContactReducer = (state, action) => {\r\n    //console.log(state, action)\r\n    switch (action.type) {\r\n        case ADD_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case DELETE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            };\r\n        case UPDATE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\r\n            };\r\n        case SET_CURRENT:\r\n            return {\r\n                ...state,\r\n                current: action.payload\r\n            };\r\n        case CLEAR_CURRENT:\r\n            return {\r\n                ...state,\r\n                current: null\r\n            };\r\n        case FILTER_CONTACTS:\r\n            return {\r\n                ...state,\r\n                filtered: state.contacts.filter(contact => {\r\n                    const regex = new RegExp(`${action.payload}`, 'gi');\r\n                    return contact.name.match(regex);\r\n                })\r\n            };\r\n        case CLEAR_FILTER:\r\n            return {\r\n                ...state,\r\n                filtered: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","export const ADD_CONTACT = 'ADD_CONTACT';\r\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';\r\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\r\nexport const FILTER_CONTACTS = 'FILTER_CONTACTS';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\nexport const CLEAR_FILTER = 'CLEAR_FILTER';","import React, { useReducer } from 'react';\r\nimport { ContactContext } from './ContactContext';\r\nimport { ContactReducer } from './ContactReducer';\r\nimport {\r\n    ADD_CONTACT, UPDATE_CONTACT, DELETE_CONTACT, CLEAR_CURRENT,\r\n    FILTER_CONTACTS, SET_CURRENT, CLEAR_FILTER\r\n} from './types';\r\n\r\n\r\n//Create Provider Component aka ContactState\r\nconst ContactState = (props) => {\r\n    //get parsed contacts from local storage\r\n    const initialContacts = JSON.parse(localStorage.getItem('contacts'));\r\n    const initialState = {\r\n        contacts: initialContacts || [],\r\n        filtered: null,\r\n        current: null\r\n    }\r\n    const [state, dispatch] = useReducer(ContactReducer, initialState);\r\n\r\n    //add a contact Action\r\n    const addContact = (contact) => {\r\n        dispatch({ type: ADD_CONTACT, payload: contact })\r\n    }\r\n    //delete a contact Action\r\n    const deleteContact = (id) => {\r\n        dispatch({ type: DELETE_CONTACT, payload: id })\r\n    }\r\n    //update a contact Action\r\n    const updateContact = (contact) => {\r\n        dispatch({ type: UPDATE_CONTACT, payload: contact })\r\n    }\r\n    //set current contact Action\r\n    const setCurrentContact = (contact) => {\r\n        dispatch({ type: SET_CURRENT, payload: contact })\r\n    }\r\n    //clear current Contact after edit Action\r\n    const clearCurrentContact = () => {\r\n        dispatch({ type: CLEAR_CURRENT })\r\n    }\r\n    //filter contacts by name Action\r\n    const filterContacts = (text) => {\r\n        dispatch({ type: FILTER_CONTACTS, payload: text })\r\n    }\r\n    //clear filter / set to null filter Action\r\n    const clearFilter = () => {\r\n        dispatch({ type: CLEAR_FILTER })\r\n    }\r\n    return (\r\n        <ContactContext.Provider\r\n            value={\r\n                {\r\n                    contacts: state.contacts,\r\n                    current: state.current,\r\n                    filtered: state.filtered,\r\n                    addContact,\r\n                    deleteContact,\r\n                    setCurrentContact,\r\n                    updateContact,\r\n                    clearCurrentContact,\r\n                    filterContacts,\r\n                    clearFilter\r\n                }\r\n            }\r\n        >\r\n            {props.children}\r\n        </ContactContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ContactState;","import React from 'react';\r\nimport './Navbar.css'\r\nimport { TiContacts } from \"react-icons/ti\";\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"nav navbar-extend-lg\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h1>\r\n                            <TiContacts />Contacts\r\n                            </h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport './AddContact.css';\r\nimport { ContactContext } from '../../context/ContactContext';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst AddContact = () => {\r\n    let contactContext = useContext(ContactContext);\r\n    const { addContact, updateContact, contacts, current, clearCurrentContact } = useContext(ContactContext);\r\n    const [contact, setContact] = useState({\r\n        id: '',\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        type: 'personal'\r\n    })\r\n    const { name, email, phone, type } = contact;\r\n\r\n    useEffect(() => {\r\n        if (current !== null) {\r\n            setContact(current);\r\n        } else {\r\n            setContact({\r\n                id: '',\r\n                name: '',\r\n                email: '',\r\n                phone: '',\r\n                type: 'personal'\r\n            })\r\n        }\r\n    }, [contactContext, current])\r\n\r\n    const onChangeActions = (e) => {\r\n        setContact({ ...contact, id: uuid(), [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const formOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (current === null) {\r\n            addContact(contact);\r\n        } else {\r\n            updateContact({ ...contact, id: current.id });\r\n            setContact(current)\r\n        }\r\n        clearCurrentContact();\r\n    }\r\n    useEffect(() => {\r\n        //set to local storage stringified contacts from the context\r\n        localStorage.setItem('contacts', JSON.stringify(contacts));\r\n    })\r\n    return (\r\n        <form id=\"addcontact\" onSubmit={formOnSubmit}>\r\n            <h2>{current ? 'Edit Contact' : 'Add Contact'}</h2>\r\n            <div className=\"form-group\">\r\n                <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Name\" value={name} onChange={onChangeActions} className=\"form-control\" required />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" value={email} onChange={onChangeActions} className=\"form-control\" required />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"tel\" name=\"phone\" id=\"phone\" placeholder=\"Phone\" value={phone} onChange={onChangeActions} className=\"form-control\" required />\r\n            </div>\r\n            <h5>Contact Type</h5>\r\n            <div className=\"form-check form-check-inline\">\r\n                <input className=\"form-check-input\" type=\"radio\" name=\"type\" value=\"personal\" id=\"personal\" onChange={onChangeActions} checked={type === 'personal'} />\r\n                <label className=\"form-check-label\" htmlFor=\"personal\">Personal</label>\r\n            </div>\r\n            <div className=\"form-check form-check-inline\">\r\n                <input className=\"form-check-input\" type=\"radio\" name=\"type\" value=\"professional\" id=\"professional\" onChange={onChangeActions} checked={type === 'professional'} />\r\n                <label className=\"form-check-label\" htmlFor=\"professional\">Professional</label>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success btn-block\">{current ? 'Edit' : 'Submit'}</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddContact;","import React, { useContext, useEffect, useRef } from 'react';\r\nimport './FindContact.css';\r\nimport { ContactContext } from '../../context/ContactContext';\r\n\r\n\r\nconst FindContact = () => {\r\n    const { filterContacts, filtered, clearFilter } = useContext(ContactContext);\r\n    const text = useRef('');\r\n\r\n    useEffect(() => {\r\n        if (filtered === null) {\r\n            text.current.value = '';\r\n        }\r\n    });\r\n    const filter = (e) => {\r\n        if (text.current.value !== '') {\r\n            filterContacts(e.target.value);\r\n        } else {\r\n            clearFilter();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form id=\"findcontact\">\r\n            <div className=\"form-group\">\r\n                <input\r\n                    ref={text}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Find contact\"\r\n                    onChange={filter}\r\n                />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default FindContact;\r\n\r\n\r\n","import React, { useContext } from 'react';\r\nimport { ContactContext } from '../../context/ContactContext';\r\nimport { HiMailOpen, HiPhone } from 'react-icons/hi';\r\nimport './Contact.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Contact = ({ contact }) => {\r\n    const { deleteContact, setCurrentContact } = useContext(ContactContext);\r\n    const { id, name, email, phone, type } = contact;\r\n\r\n    const onDelete = (id) => {\r\n        deleteContact(id);\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            < div className=\"card-header\">\r\n                <h4>{name}</h4>\r\n                <span className={type === 'personal' ? 'badge badge-primary' : 'badge badge-success'}>{type}</span>\r\n            </div >\r\n            <div className=\"card-body\">\r\n                <ul>\r\n                    <li><HiMailOpen /> <span>{email}</span></li>\r\n                    <li><HiPhone /> <span>{phone}</span></li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"card-footer\">\r\n                <button className=\"btn btn-primary\" onClick={() => setCurrentContact(contact)}>Edit</button>\r\n                <button className=\"btn btn-secondary\" onClick={onDelete.bind(this, id)}>Delete</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;","import React, { useContext } from 'react';\r\nimport { ContactContext } from '../../context/ContactContext';\r\nimport Contact from '../Contact/Contact';\r\n\r\nconst Contacts = () => {\r\n    const { contacts, filtered } = useContext(ContactContext);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                filtered !== null ? <>{filtered.length !== 0 ? filtered.map(contact =>\r\n                    <Contact key={contact.id} contact={contact} />) : <><h4 style={{ margin: '0', fontSize: '1.75rem' }}>No such contact</h4></>}</> :\r\n                    contacts.length > 0 && contacts !== null ? <>{\r\n                        contacts.map(contact => {\r\n                            return <Contact key={contact.id} contact={contact} />\r\n                        })} </> : <h4 style={{ margin: '0', fontSize: '1.75rem' }}>Please add a contact</h4>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport './Footer.css';\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Made by <span>Matei Mircea</span> @ {new Date().getFullYear()}</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport ContactState from './context/ContactState'\nimport Navbar from './components/Navbar/Navbar';\nimport AddContact from './components/AddContact/AddContact';\nimport FindContact from './components/FindContact/FindContact'\nimport Contacts from './components/Contacts/Contacts'\nimport Footer from './components/Footer/Footer';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  return (\n    <ContactState>\n      <Navbar />\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <AddContact />\n          </div>\n          <div className=\"col-md-6\">\n            <FindContact />\n            <Contacts />\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </ContactState>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}